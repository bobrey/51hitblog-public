<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on IT技术分享</title>
    <link>https://www.51hint.com/tags/python/</link>
    <description>Recent content in python on IT技术分享</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 10 Mar 2019 16:11:00 +0800</lastBuildDate><atom:link href="https://www.51hint.com/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Py_chromeHeadless操作</title>
      <link>https://www.51hint.com/posts/py_chromeheadless%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sun, 10 Mar 2019 16:11:00 +0800</pubDate>
      
      <guid>https://www.51hint.com/posts/py_chromeheadless%E6%93%8D%E4%BD%9C/</guid>
      <description>Chrome DevTools Protocol Chrome DevTools Protocol https://github.com/ChromeDevTools/devtools-protocol API 文档 https://chromedevtools.github.io/devtools-protocol/ 本地启动Headless Chrome docker run -it --rm --name alpine-chrome -p 9222:9222 einverne/alpine-chrome //启动之后可以访问。http://localhost:9222/json</description>
    </item>
    
    <item>
      <title>Py验证码</title>
      <link>https://www.51hint.com/posts/py%E9%AA%8C%E8%AF%81%E7%A0%81/</link>
      <pubDate>Wed, 06 Mar 2019 14:34:53 +0800</pubDate>
      
      <guid>https://www.51hint.com/posts/py%E9%AA%8C%E8%AF%81%E7%A0%81/</guid>
      <description>图形验证码的识别 转灰度；二值化等，再识别 import tesserocr from PIL import Image image = Image.open(xx.png) image. image.convert(&amp;#39;L&amp;#39;) #灰度 threshold = 127 table=[] for i in range(256): if i &amp;lt; threshold: table.append(0) else: table.append(1) image = iamge.point(table, &amp;#39;1&amp;#39;) #二值化 result = tesserocr.image_to_text(image) print(result) 极验滑动验证码 拖动</description>
    </item>
    
    <item>
      <title>PySplash</title>
      <link>https://www.51hint.com/posts/pysplash/</link>
      <pubDate>Tue, 05 Mar 2019 21:56:09 +0800</pubDate>
      
      <guid>https://www.51hint.com/posts/pysplash/</guid>
      <description>splash lua脚本 function main(splash, args) splash:go(&amp;#34;http://www.baidu.com&amp;#34;) splash:wait(0.5) local title = splash:evaljs(&amp;#34;document.title&amp;#34;) return {title=title} end 1.异步处理 function main(splash, args) local example_urls = {&amp;#34;www.baidu.com&amp;#34;, &amp;#34;www.taobao.com&amp;#34;, &amp;#34;www.zhihu.com&amp;#34;} local urls = args.urls or example_urls local results = {} for index, url in ipairs(urls) do local ok, reason = splash:go(&amp;#34;http://&amp;#34; .. url) if ok then splash:wait(2) results[url] = splash:png() end end return results end //</description>
    </item>
    
    <item>
      <title>Pyselenium</title>
      <link>https://www.51hint.com/posts/pyselenium/</link>
      <pubDate>Tue, 05 Mar 2019 20:55:14 +0800</pubDate>
      
      <guid>https://www.51hint.com/posts/pyselenium/</guid>
      <description>1.基本使用 from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.common.keys import Keys from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.support.wait import WebDriverWait browser = webdriver.Chrome() try: browser.get(&amp;#39;https://www.baidu.com&amp;#39;) input = browser.find_element_by_id(&amp;#39;kw&amp;#39;) input.send_keys(&amp;#39;Python&amp;#39;) input.send_keys(Keys.ENTER) wait = WebDriverWait(browser, 10) wait.until(EC.presence_of_element_located((By.ID, &amp;#39;content_left&amp;#39;))) print(browser.current_url) print(browser.get_cookies()) print(browser.page_source) finally: browser.close() 2.理解 from selenium import webdriver browser = webdriver.Chrome() browser.get(&amp;#39;https://www.taobao.com&amp;#39;) print(browser.page_source) browser.close() // 查找节点 find_element_by_id find_element_by_name</description>
    </item>
    
    <item>
      <title>Py文件打开方式</title>
      <link>https://www.51hint.com/posts/py%E6%96%87%E4%BB%B6%E6%89%93%E5%BC%80%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Tue, 05 Mar 2019 15:42:03 +0800</pubDate>
      
      <guid>https://www.51hint.com/posts/py%E6%96%87%E4%BB%B6%E6%89%93%E5%BC%80%E6%96%B9%E5%BC%8F/</guid>
      <description>r：以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。 rb：以二进制只读方式打开一个文件。文件指针将会放在文件的开头。 r+：以</description>
    </item>
    
    <item>
      <title>Py解析库</title>
      <link>https://www.51hint.com/posts/py%E8%A7%A3%E6%9E%90%E5%BA%93/</link>
      <pubDate>Tue, 05 Mar 2019 11:38:44 +0800</pubDate>
      
      <guid>https://www.51hint.com/posts/py%E8%A7%A3%E6%9E%90%E5%BA%93/</guid>
      <description>xpath XPath常用规则 表达式 描述 nodename 选取此节点的所有子节点 / 从当前节点选取直接子节点 // 从当前节点选取子孙节点 . 选取当前节点 .. 选取当前节点的父节点</description>
    </item>
    
    <item>
      <title>Py正则表达式</title>
      <link>https://www.51hint.com/posts/py%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
      <pubDate>Tue, 05 Mar 2019 09:17:24 +0800</pubDate>
      
      <guid>https://www.51hint.com/posts/py%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid>
      <description>在线正则表达式测试 http://tool.oschina.net/regex/ 规则 表3-2 常用的匹配规则 模式 描述 \w 匹配字母、数字及下划线 \W 匹配不是字母、数字及下划线的字符 \s 匹配任意空白字符，等价于[</description>
    </item>
    
    <item>
      <title>selenium</title>
      <link>https://www.51hint.com/posts/selenium/</link>
      <pubDate>Sun, 26 Mar 2017 20:10:22 +0000</pubDate>
      
      <guid>https://www.51hint.com/posts/selenium/</guid>
      <description>Selenium,Tor sudo apt-get install python-pip -y sudo pip install selenium Basic Usage from selenium import webdriver driver = webdriver.Firefox() driver.get(&amp;#34;http://www.imdb.com/name/nm0331516/&amp;#34;) pagesHTML = driver.page_source searchBar = driver.find_element_by_id(&amp;#34;navbar-query&amp;#34;) searchBar.send_keys(&amp;#34;summer glau&amp;#34;) driver.find_element_by_id(&amp;#34;navbar-submit-button&amp;#34;).click() firstResult = driver.find_element_by_class_name(&amp;#34;result_text&amp;#34;) resultingURL = firstResult.find_element_by_tag_name(&amp;#34;a&amp;#34;).get_attribute(&amp;#34;href&amp;#34;) driver.get(resultingURL) driver.close()  If you want to use Chrome instead of Firefox, you need to download a chromedriver file from: http://chromedriver.storage.googleapis.com/index.html.
  Download the latest version for your distribution, unzip the file, and move the output chromedriver file to /usr/bin.</description>
    </item>
    
    <item>
      <title>xvfb</title>
      <link>https://www.51hint.com/posts/xvfb/</link>
      <pubDate>Tue, 14 Mar 2017 01:59:17 +0000</pubDate>
      
      <guid>https://www.51hint.com/posts/xvfb/</guid>
      <description>$sudo apt-get update $ sudo apt-get install firefox xvfb -y $ sudo aptitude install xfonts-100dpi xfonts-75dpi xfonts-scalable xfonts-cyrillic $ sudo apt-get install fonts-ipafont-gothic fonts-ipafont-mincho export DISPLAY=:10 echo &amp;#34;Starting Xvfb ...&amp;#34; Xvfb :10 -screen 0 1024x768x24 -ac &amp;amp; http://localhost:4444/wd/hub/static/resource/hub.html</description>
    </item>
    
    <item>
      <title>基于python yield机制的异步操作同步化编程模型</title>
      <link>https://www.51hint.com/posts/ji-yu-python-yieldji-zhi-de-yi-bu-cao-zuo-tong-bu-hua-bian-cheng-mo-xing/</link>
      <pubDate>Tue, 28 Feb 2017 16:11:15 +0000</pubDate>
      
      <guid>https://www.51hint.com/posts/ji-yu-python-yieldji-zhi-de-yi-bu-cao-zuo-tong-bu-hua-bian-cheng-mo-xing/</guid>
      <description>游戏引擎一般都采用分布式框架，通过一定的策略来均衡服务器集群的资源负载，从而保证服务器运算的高并发性和CPU高利用率，最终提高游戏的性能和负</description>
    </item>
    
    <item>
      <title>PYTHON-进阶-FUNCTOOLS模块小结</title>
      <link>https://www.51hint.com/posts/python-jin-jie-functoolsmo-kuai-xiao-jie/</link>
      <pubDate>Tue, 28 Feb 2017 15:58:50 +0000</pubDate>
      
      <guid>https://www.51hint.com/posts/python-jin-jie-functoolsmo-kuai-xiao-jie/</guid>
      <description>functools.partial 作用: 通过包装手法，允许我们 &amp;ldquo;重新定义&amp;rdquo; 函数签名 用一些默认参数包装一个可调用对象,返回结果是可调用对象，并且可以像</description>
    </item>
    
    <item>
      <title>Python装饰器和符号@</title>
      <link>https://www.51hint.com/posts/pythonzhuang-shi-qi-he-fu-hao/</link>
      <pubDate>Tue, 28 Feb 2017 15:40:57 +0000</pubDate>
      
      <guid>https://www.51hint.com/posts/pythonzhuang-shi-qi-he-fu-hao/</guid>
      <description>装饰器 Decorator 在代码运行期间动态增加功能的方式，称之为“装饰器”。装饰器本质是高阶函数, 就是将函数作为参数进行相应运作,最后返回一个闭包代替原有函</description>
    </item>
    
    <item>
      <title>opencv 人脸识别</title>
      <link>https://www.51hint.com/posts/2012-12-21-opencv-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/</link>
      <pubDate>Fri, 21 Dec 2012 05:41:17 +0000</pubDate>
      
      <guid>https://www.51hint.com/posts/2012-12-21-opencv-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/</guid>
      <description>正确安装Opencv2.3的python包,这个版本的包和之前不同，需要事先安装numpy，否则无法正常使用 将opencv安装目录里的\da</description>
    </item>
    
    <item>
      <title>python 开发web框架  【Django框架】</title>
      <link>https://www.51hint.com/posts/2012-11-28-python-%E5%BC%80%E5%8F%91web%E6%A1%86%E6%9E%B6-django%E6%A1%86%E6%9E%B6/</link>
      <pubDate>Wed, 28 Nov 2012 07:29:36 +0000</pubDate>
      
      <guid>https://www.51hint.com/posts/2012-11-28-python-%E5%BC%80%E5%8F%91web%E6%A1%86%E6%9E%B6-django%E6%A1%86%E6%9E%B6/</guid>
      <description>http://djangobook.py3k.cn/2.0/ http://ahuaxuan.iteye.com/blog/238540</description>
    </item>
    
  </channel>
</rss>
